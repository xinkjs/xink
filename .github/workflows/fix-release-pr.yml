name: Fix Release PR Dependencies

on:
  # Allows manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  fix-dependencies:
    name: Fix Workspace Protocols in Release PR Branch
    runs-on: ubuntu-latest
    permissions:
      # Needs write access to push the corrected commit
      contents: write
    steps:
      - name: Checkout Release Branch
        uses: actions/checkout@v4
        with:
          # Explicitly check out the branch created by changesets
          ref: changeset-release/main

      # Setup Node because the script uses Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # --- Manually Replace workspace:* ---
      - name: Manually replace workspace protocols
        id: replacement
        run: |
          echo "Attempting manual workspace replacement..."
          # Need to get versions from the files *on this branch*
          # Use jq if available, or Node.js
          if ! command -v jq &> /dev/null; then
              echo "jq could not be found, installing..."
              sudo apt-get update && sudo apt-get install -y jq
          fi

          XINK_VERSION=$(jq -r '.version' packages/xink/package.json)
          XIN_VERSION=$(jq -r '.version' packages/xin/package.json)
          # Add other packages if needed

          echo "Found xink version: $XINK_VERSION"
          echo "Found xin version: $XIN_VERSION"

          if [ -z "$XINK_VERSION" ] || [ -z "$XIN_VERSION" ]; then
            echo "Error: Could not extract package versions."
            exit 1
          fi

          # Use sed to replace. Add more lines for other dependencies/packages
          # Important: Use a temporary file for sed -i compatibility on Linux
          find packages -name 'package.json' -exec sed -i.bak "s|\"@xinkjs/xink\": \"workspace:\*\"|\"@xinkjs/xink\": \"^$XINK_VERSION\"|g" {} \;
          find packages -name 'package.json' -exec sed -i.bak "s|\"@xinkjs/xin\": \"workspace:\*\"|\"@xinkjs/xin\": \"^$XIN_VERSION\"|g" {} \;
          # Clean up backup files created by sed -i
          find packages -name 'package.json.bak' -exec rm {} \;

          echo "Replacement attempt finished."
          # Check if files were actually modified
          if git status --porcelain | grep "package.json"; then
            echo "changes_made=true" >> $GITHUB_OUTPUT
          else
            echo "No workspace protocols found or replaced."
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: Show package.json after manual replacement (Debug)
        run: |
          echo "--- packages/xink/package.json ---"
          cat packages/xink/package.json || echo "File not found"
          echo "--- packages/adapter-bun/package.json ---"
          cat packages/adapter-bun/package.json || echo "File not found"
          # Add others

      # --- Commit and Push Fixes ---
      - name: Commit and Push Fixes
        if: steps.replacement.outputs.changes_made == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Configuring git user..."
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          echo "Staging fixed package.json files..."
          git add packages/**/package.json # Stage only package.json files
          echo "Amending previous commit..."
          # Amend the commit made by the changesets action to include these fixes
          git commit --amend --no-edit
          echo "Force-pushing corrected branch..."
          git push --force-with-lease origin changeset-release/main
